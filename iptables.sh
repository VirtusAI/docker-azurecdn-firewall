#!/bin/bash
#
# This script outputs iptables rules compatible with iptables-restore.
# The rules are designed to block traffic to the public interface 
# that is not from whitelisted addresses before they reach the 
# standard Docker routing rules.
#
# Expects the following environment variables (https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-client-creds-grant-flow#request-an-access-token):
#  - AZURE_CLIENT_ID      Azure Service Principal client ID
#  - AZURE_CLIENT_SECRET  Azure Service Principal client secret
#  - AZURE_TENANT_ID      Azure AD tenant ID
#  - AZURE_CDN            Azure CDN (Standard/Premium/Custom)
#
# Optional:
#  - FW_DISABLE   if set to 1, disables the firewall rules
#
# Example:
#  $ iptables.sh | iptables-restore --counters --noflush

# Get public interface name
IF=$(ip route | awk '/^default/{print $5}')

[ -n "$AZURE_CLIENT_ID" ] || { echo "AZURE_CLIENT_ID is not set."; exit 1; }
[ -n "$AZURE_CLIENT_SECRET" ] || { echo "AZURE_CLIENT_SECRET is not set."; exit 1; }
[ -n "$AZURE_TENANT_ID" ] || { echo "AZURE_TENANT_ID is not set."; exit 1; }
[ -n "$AZURE_CDN" ] || { echo "AZURE_CDN is not set."; exit 1; }

service=azurecdn

prefix=DOCKER-$service
chain=$prefix-$(openssl rand -hex 3)

echo "# Generated by iptables.sh: $service"
echo "# Public interface: $IF"
/sbin/iptables-save -t mangle | sed "/$prefix-/d;/^COMMIT$/d;/^#/d"

# Allow the firewall to be disabled
if [[ "$FW_DISABLE" = "1" ]]; then
  echo COMMIT
  exit 0
fi

# Add new chain
echo -N ${chain}

# Retrieve Azure CDN REST API access token (https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-client-creds-grant-flow#request-an-access-token)
azureAccessToken=$(curl -sS -X POST -d 'grant_type=client_credentials' --data-urlencode "client_id=$AZURE_CLIENT_ID" --data-urlencode "client_secret=$AZURE_CLIENT_SECRET" --data-urlencode 'resource=https://management.azure.com/' https://login.microsoftonline.com/$AZURE_TENANT_ID/oauth2/token | jq -r '.access_token')

# Retrieve Edge Node IPs (https://docs.microsoft.com/en-us/rest/api/cdn/edgenodes/list)
addrs=$(curl -sS -H "Authorization: Bearer $azureAccessToken" https://management.azure.com/providers/Microsoft.Cdn/edgenodes?api-version=2017-10-12 | jq -r '.value[] | select(.name | contains("'"$AZURE_CDN"'")) | .properties.ipAddressGroups[].ipv4Addresses[] | [.baseIpAddress,.prefixLength|tostring] | join("/")')

# Allow source IPs
for addr in $addrs; do
  echo -A ${chain} -s ${addr} -j RETURN -m comment --comment "static-entry"
done

# Deny all other IPs
echo -A ${chain} -j DROP

# Insert rule into PREROUTING
echo -A PREROUTING -i $IF -p tcp -m multiport --dports 80,443 -j ${chain}

echo COMMIT

